---

## VAR SETUP

- name: 'Set CentOS directory prefix'
  set_fact:
    etc_prefix: "/etc"
  when: ansible_os_family == "RedHat"

- name: 'Set CentOS haproxy config location'
  set_fact:
    config_location: "/etc/haproxy/haproxy.cfg"
  when: ansible_os_family == "RedHat"

- name: 'Set Debian/Ubuntu directory prefix'
  set_fact:
    etc_prefix: "/etc"
  when: ansible_os_family == "Debian"

- name: 'Set Debian/Ubuntu haproxy config location'
  set_fact:
    config_location: "/etc/haproxy/haproxy.cfg"
  when: ansible_os_family == "Debian"

- name: 'Set Alpine directory prefix'
  set_fact:
    etc_prefix: "/etc"
  when: ansible_os_family == "Alpine"

- name: 'Set Alpine haproxy config location'
  set_fact:
    config_location: "/etc/haproxy/haproxy.cfg"
  when: ansible_os_family == "Alpine"

## PACKAGE INSTALL

- name: 'Check epel repo'
  shell: yum repolist | grep -qi EPEL
  register: epel_repo_check
  when: ansible_pkg_mgr == "yum"

- name: 'Add epel repo'
  template:
    src: "epel.repo"
    dest: "/etc/yum.repos.d/epel.repo"
    owner: "root"
    group: "root"
    mode: "0644"
  when: ansible_pkg_mgr == "yum" and epel_repo_check is defined and epel_repo_check.rc != 0

- name: 'Installs haproxy as well as socat for socket api'
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - haproxy
    - socat
  when: ansible_os_family == 'RedHat'

- name: 'Add haproxy apt repo (squeeze)'
  apt_repository:
    repo: deb http://http.debian.net/debian {{ ansible_distribution_release }}-backports-sloppy main
    state: present
    update_cache: yes
  when: ansible_distribution_release == 'squeeze'

- name: Add haproxy apt repo (wheezy/jessie)
  apt_repository:
    repo: deb http://http.debian.net/debian {{ ansible_distribution_release }}-backports main
    state: present
    update_cache: yes
  when: ansible_distribution_release == 'wheezy' or ansible_distribution_release == 'jessie'

- name: 'Add haproxy apt repo (Ubuntu)'
  apt_repository:
    repo: "ppa:vbernat/haproxy-1.5"
    state: present
    update_cache: yes
  when: ansible_distribution == "Ubuntu"

- name: 'Installs haproxy as well as socat for socket api'
  apt:
    pkg: "{{ item }}"
    state: latest
  with_items:
    - haproxy
    - socat
  when: ansible_os_family == 'Debian'

- name: 'Installs haproxy as well as socat for socket api'
  apk:
    pkg: "{{ item}}"
    state: latest
  with_items:
    - haproxy
    - socat
  when: ansible_os_family == 'Alpine'

- name: 'Enable it'
  service:
    name: haproxy
    enabled: yes

- name: 'Ensure chroot directory exists'
  file:
    name: "{{ haproxy_global.chroot }}"
    state: directory
  when: haproxy_global.chroot is defined and haproxy_global.chroot
